{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAkBC,SAASC,cAAc,yBAEzCC,EAAiBF,SAASC,cAAc,wBAExCE,EAAcH,SAASC,cAAc,0BAsB3C,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CA9BeN,SAASC,cAAc,2BAE/Ba,iBAAiB,SAErC,SAA2BC,GACzBA,EAAEC,iBAEF,MAAMC,EAAYC,OAAOhB,EAAeiB,OAExC,IAAIC,EAAWF,OAAOnB,EAAgBoB,OAEtC,IAAK,IAAIE,EAAQ,EAAGA,GAASlB,EAAYgB,MAAOE,GAAS,EACvDjB,EAAciB,EAAOD,GAClBE,MAAKC,GAAW1B,EAAA2B,OAAOC,QAAQF,KAC/BG,OAAMH,GAAW1B,EAAA2B,OAAOG,QAAQJ,KAEnCH,GAAYH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst firstDelayInput = document.querySelector('input[name = \"delay\"]');\n\nconst delayStepInput = document.querySelector('input[name = \"step\"]');\n\nconst amountInput = document.querySelector('input[name = \"amount\"]');\n\nconst createPromiseButton = document.querySelector('button[type = \"submit\"]');\n\ncreatePromiseButton.addEventListener('click', handleClickButton);\n\nfunction handleClickButton(e) {\n  e.preventDefault();\n\n  const delayStep = Number(delayStepInput.value);\n\n  let delaySum = Number(firstDelayInput.value);\n\n  for (let index = 1; index <= amountInput.value; index += 1) {\n    createPromise(index, delaySum)\n      .then(message => Notify.success(message))\n      .catch(message => Notify.failure(message));\n\n    delaySum += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelayInput","document","querySelector","$47d4ff9957288465$var$delayStepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delayStep","Number","value","delaySum","index","then","message","Notify","success","catch","failure"],"version":3,"file":"03-promises.778dd735.js.map"}